ApiCollectionsDefault:
  handler: index.collections
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  apiRole: true
  source: 'node_modules/@cumulus/api/dist/'
  envs:
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    CollectionsTable:
      function: Ref
      value: CollectionsTableDynamoDB
    internal: '{{parent.system_bucket}}'
    ES_HOST:
      function: Ref
      value: ElasticSearchDomain
  apiGateway:
    # Default paths
    - path: collections
      method: get
      cors: true
      api: backend
    - path: collections
      method: post
      cors: true
      api: backend
    - path: collections/{collectionName}/{version}
      method: get
      cors: true
      api: backend
    - path: collections/{collectionName}/{version}
      method: put
      cors: true
      api: backend
    - path: collections/{collectionName}/{version}
      method: delete
      cors: true
      api: backend

ApiGranulesDefault:
  handler: index.granules
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  source: 'node_modules/@cumulus/api/dist/'
  apiRole: true
  urs: true
  envs:
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    CollectionsTable:
      function: Ref
      value: CollectionsTableDynamoDB
    ProvidersTable:
      function: Ref
      value: ProvidersTableDynamoDB
    GranulesTable:
      function: Ref
      value: GranulesTableDynamoDB
    invoke:
      function: "Ref"
      value: ScheduleSFLambdaFunction
    bucket: '{{parent.system_bucket}}'
    internal: '{{parent.system_bucket}}'
    cmr_provider: '{{parent.cmr.provider}}'
    cmr_client_id: '{{parent.cmr.clientId}}'
    cmr_username: '{{parent.cmr.username}}'
    cmr_password:
      function: "Ref"
      value: "CmrPassword"
    ES_HOST:
      function: Ref
      value: ElasticSearchDomain
  apiGateway:
    # Default paths
    - path: granules
      method: get
      cors: true
      api: backend
    - path: granules/{granuleName}
      method: get
      cors: true
      api: backend
    - path: granules/{granuleName}
      method: put
      cors: true
      api: backend
    - path: granules/{granuleName}
      method: delete
      cors: true
      api: backend

ApiExecutionsDefault:
  handler: index.executions
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  apiRole: true
  source: 'node_modules/@cumulus/api/dist/'
  envs:
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    ES_HOST:
      function: Ref
      value: ElasticSearchDomain
    ExecutionsTable:
      function: Ref
      value: ExecutionsTableDynamoDB
  apiGateway:
    #default paths
    - path: executions
      method: get
      cors: true
      api: backend
    - path: executions/{arn}
      method: get
      cors: true
      api: backend

ApiExecutionStatusDefault:
  handler: index.executionStatus
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  apiRole: true
  source: 'node_modules/@cumulus/api/dist/'
  envs:
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    ES_HOST:
      function: Ref
      value: ElasticSearchDomain
  apiGateway:
    #default paths
    - path: executions/status/{arn}
      method: get
      cors: true
      api: backend

ApiWorkflowsDefault:
  handler: index.workflows
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  apiRole: true
  source: 'node_modules/@cumulus/api/dist/'
  envs:
    bucket: '{{parent.system_bucket}}'
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
  apiGateway:
    #default paths
    - path: workflows
      method: get
      cors: true
      api: backend
    - path: workflows/{name}
      method: get
      cors: true
      api: backend

ApiRulesDefault:
  handler: index.rules
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  apiRole: true
  envs:
    bucket: '{{parent.system_bucket}}'
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    CollectionsTable:
      function: Ref
      value: CollectionsTableDynamoDB
    ProvidersTable:
      function: Ref
      value: ProvidersTableDynamoDB
    RulesTable:
      function: Ref
      value: RulesTableDynamoDB
    invoke:
      function: "Ref"
      value: ScheduleSFLambdaFunction
    invokeArn:
      function: "Ref"
      value: ScheduleSFLambdaFunction
    kinesisConsumer:
      function: "Ref"
      value: kinesisConsumerLambdaFunction
    ES_HOST:
      function: Ref
      value: ElasticSearchDomain
  source: 'node_modules/@cumulus/api/dist/'
  apiGateway:
    #default paths
    - path: rules
      method: get
      cors: true
      api: backend
    - path: rules/{name}
      method: get
      cors: true
      api: backend
    - path: rules
      method: post
      cors: true
      api: backend
    - path: rules/{name}
      method: put
      cors: true
      api: backend
    - path: rules/{name}
      method: delete
      cors: true
      api: backend

ApiProvidersDefault:
  handler: index.providers
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  apiRole: true
  envs:
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    ProvidersTable:
      function: Ref
      value: ProvidersTableDynamoDB
    internal: '{{parent.system_bucket}}'
    ES_HOST:
      function: Ref
      value: ElasticSearchDomain
  source: 'node_modules/@cumulus/api/dist/'
  apiGateway:
    #default paths
    - path: providers
      method: get
      cors: true
      api: backend
    - path: providers/{id}
      method: get
      cors: true
      api: backend
    - path: providers
      method: post
      cors: true
      api: backend
    - path: providers/{id}
      method: put
      cors: true
      api: backend
    - path: providers/{id}
      method: delete
      cors: true
      api: backend

ApiPdrsDefault:
  handler: index.pdrs
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  source: 'node_modules/@cumulus/api/dist/'
  envs:
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    internal: '{{parent.system_bucket}}'
    ES_HOST:
      function: Ref
      value: ElasticSearchDomain
    PdrsTable:
      function: Ref
      value: PdrsTableDynamoDB
  apiGateway:
    #default paths
    - path: pdrs
      method: get
      cors: true
      api: backend
    - path: pdrs/{pdrName}
      method: get
      cors: true
      api: backend
    - path: pdrs/{pdrName}
      method: delete
      cors: true
      api: backend

ApiLogsDefault:
  handler: index.logs
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  source: 'node_modules/@cumulus/api/dist/'
  apiRole: true
  envs:
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    ES_HOST:
      function: Ref
      value: ElasticSearchDomain
  apiGateway:
    #default paths
    - path: stats/logs
      method: get
      cors: true
      api: backend
    - path: logs
      method: get
      cors: true
      api: backend
    - path: logs/{executionName}
      method: get
      cors: true
      api: backend

ApiSchemaDefault:
  handler: index.schemas
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  apiRole: true
  source: 'node_modules/@cumulus/api/dist/'
  envs:
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
  apiGateway:
    #default paths
    - path: schemas/{schemaName}
      method: get
      cors: true
      api: backend


ApiStatsDefault:
  handler: index.stats
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  source: 'node_modules/@cumulus/api/dist/'
  apiRole: true
  envs:
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    ES_HOST:
      function: Ref
      value: ElasticSearchDomain
  apiGateway:
    #default paths
    - path: stats
      method: get
      cors: true
      api: backend
    - path: stats/histogram
      method: get
      cors: true
      api: backend
    - path: stats/aggregate
      method: get
      cors: true
      api: backend
    - path: stats/average
      method: get
      cors: true
      api: backend

ApiTokenDefault:
  handler: index.token
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  source: 'node_modules/@cumulus/api/dist/'
  apiRole: true
  urs: true
  envs:
    EARTHDATA_BASE_URL: '{{parent.urs_url}}'
    EARTHDATA_CLIENT_ID: '{{EARTHDATA_CLIENT_ID}}'
    EARTHDATA_CLIENT_PASSWORD: '{{EARTHDATA_CLIENT_PASSWORD}}'
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    OAUTH_PROVIDER: '{{parent.oauth.provider}}'
  apiGateway:
    #default paths
    - api: backend
      path: token
      method: get
      cors: true

ApiVersionDefault:
  handler: index.version
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  source: 'node_modules/@cumulus/api/dist/'
  apiGateway:
    #default paths
    - api: backend
      path: version
      method: get
      cors: true

ApiReconciliationReportDefault:
  handler: index.reconciliationReports
  timeout: 20
  memory: '{{parent.api_lambda_memory}}'
  apiRole: true
  source: 'node_modules/@cumulus/api/dist/'
  envs:
    system_bucket: '{{parent.system_bucket}}'
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    invoke:
      function: Ref
      value: CreateReconciliationReportLambdaFunction
  apiGateway:
    #default paths
    - path: reconciliationReports
      method: get
      cors: true
      api: backend
    - path: reconciliationReports/{name}
      method: get
      cors: true
      api: backend
    - path: reconciliationReports
      method: post
      cors: true
      api: backend
    - path: reconciliationReports/{name}
      method: delete
      cors: true
      api: backend

ApiAsyncOperationsDefault:
  handler: index.asyncOperations
  apiRole: true
  source: 'node_modules/@cumulus/api/dist/'
  envs:
    stackName: '{{parent.stackName}}'
    systemBucket: '{{parent.bucket}}'
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    AsyncOperationsTable:
      function: Ref
      value: AsyncOperationsTableDynamoDB
  apiGateway:
    - api: backend
      path: asyncOperations/{id}
      method: get
      cors: true

ApiBulkDeleteDefault:
  handler: index.bulkDeleteEndpoint
  apiRole: true
  source: 'node_modules/@cumulus/api/dist/'
  apiGateway:
    - api: backend
      path: bulkDelete
      method: post
      cors: true
  envs:
    EcsCluster:
      function: Ref
      value: EcsCluster
    AsyncOperationsTable:
      function: Ref
      value: AsyncOperationsTableDynamoDB
    UsersTable:
      function: Ref
      value: UsersTableDynamoDB
    BulkDeleteLambda:
      function: Ref
      value: BulkDeleteLambdaFunction
    AsyncOperationTaskDefinition:
      function: Ref
      value: AsyncOperationTaskDefinition
    stackName: '{{parent.stackName}}'
    systemBucket: '{{parent.bucket}}'
