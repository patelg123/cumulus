default:
  stackName: change-me-cumulus
  stackNameNoDash: ChangeMeCumulus

  urs_url: https://uat.urs.earthdata.nasa.gov

  oauth:
    provider: earthdata

  api_lambda_memory: 512

  repo_owner: nasa
  message_adapter_repo: cumulus-message-adapter
  message_adapter_filename: cumulus-message-adapter.zip

  nested_templates:
    CumulusApiDefault:
      cfFile: node_modules/@cumulus/deployment/app/cumulus_api.template.yml
      configFile: node_modules/@cumulus/deployment/app/cumulus_api_default.config.yml
    CumulusApiV1:
      cfFile: node_modules/@cumulus/deployment/app/cumulus_api.template.yml
      configFile: node_modules/@cumulus/deployment/app/cumulus_api_v1.config.yml
    WorkflowLambdaVersions:
      cfFile: node_modules/@cumulus/deployment/app/workflow_lambda_versions.template.yml
      configFile: node_modules/@cumulus/deployment/app/workflow_lambda_versions.config.yml

  # if not specified the value of the apigatewy backend endpoint is used
  # api_backend_url: https://apigateway-url-to-api-backend/

  # if not specified the value of the apigateway dist url is used
  # api_distribution_url: https://apigateway-url-to-distribution-app/

  customCompilation: true
  injectWorkflowLambdaAliases: true

  params:
    - name: CmrPassword
      value: '{{CMR_PASSWORD}}' # this has to be set in .env

  shared_data_bucket: 'cumulus-data-shared'

  system_bucket: '{{buckets.internal.name}}'

  buckets:
    internal:
      name: change-me
      type: internal
    private:
      name: change-me
      type: private
    protected:
      name: change-me
      type: protected
    public:
      name: change-me
      type: public

  cmr:
    username: devseed
    provider: CUMULUS
    clientId: CUMULUS
    password: '{{CMR_PASSWORD}}'

  ems:
    provider: CUMULUS

  # this whole section has to be updated in each deployment section
  vpc:
    vpcId: xxxxxx #change-me
    subnets:
      - subnet-xxxxx #change me

  default_users:
    aimeeb: true
    jennyhliu: true
    jnorton1: true
    kbaynes: true
    kkelly: true
    kovarik: true
    lfrederick: true
    mhuffnagle2: true
    pquinn1: true
    scisco: true
    sethvincent: true
    menno.vandiermen: true
    matthewsavoie: true

  ecs:
    restartTasksOnDeploy: false
    amiid: ami-6944c513
    instanceType: change-ecs-instanceType
    volumeSize: 50
    availabilityZone: 'us-east-1b'
    maxInstances: 1
    desiredInstances: 0
    tasks:
      AsyncOperation:
        image: cumuluss/async-operation:23
        cpu: 400
        memory: 700
        count: 1
        envs:
          AWS_REGION:
            function: Fn::Sub
            value: '${AWS::Region}'
    docker:
      storageDriver: overlay2

  es:
    name: es5
    elasticSearchMapping: 8
    version: 5.3
    instanceCount: 1
    instanceType: t2.small.elasticsearch
    volumeSize: 35

  # defining the APIs. Each item will include a separate endpoint
  apiStage: dev

  dynamos: !!files ['node_modules/@cumulus/api/config/tables.yml']

  # set to true to activate pointInTime on all tables
  enablePointInTime: false

  AutoScalingPolicyConfiguration:
    targetValue: 30
    scaleInCooldown: 0
    scaleOutCooldown: 0

  sns:
    # this topic receives all the updates from
    # step functions
    sftracker:
      subscriptions:
        lambda:
          endpoint:
            function: Fn::GetAtt
            array:
              - sns2elasticsearchLambdaFunction
              - Arn
          protocol: lambda

    # This topic receives errored kinesis messages and tries them again.
    kinesisFallback:
      subscriptions:
        lambda:
          endpoint:
            function: Fn::GetAtt
            array:
              - fallbackConsumerLambdaFunction
              - Arn
          protocol: lambda

  apis:
    - name: download
    - name: backend

  sqs:
    startSF:
      visibilityTimeout: 20
      retry: 30
      consumer:
        - lambda: sqs2sf
          schedule: rate(1 minute)
          messageLimit: 10
          state: ENABLED

    kinesisFailure:
      visibilityTimeout: 20

  rules:
    backgroundJobs:
      schedule: rate(10 minutes)
      state: ENABLED
      targets:
        - lambda: jobs
    dailyEmsIngestReport:
      # run at 5:00am GMT daily
      schedule: cron(0 5 * * ? *)
      state: ENABLED
      targets:
        - lambda: EmsReport
    dailyEmsDistributionReport:
      schedule: cron(0 8 * * ? *)
      state: ENABLED
      targets:
        - lambda: EmsDistributionReport

  useWorkflowLambdaVersions: true

  stepFunctions: !!files ['workflows.yml']

  lambdas: !!files [
  'lambdas.yml',
  'node_modules/@cumulus/api/config/lambdas.yml',
  'node_modules/@cumulus/api/config/workflowLambdas.yml'
  ]

  workflowLambdas: !!files [
  'lambdas.yml',
  'node_modules/@cumulus/api/config/workflowLambdas.yml'
  ]
